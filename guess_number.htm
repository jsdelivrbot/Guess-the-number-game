<!DOCTYPE html>
<html>

  <head>
    <meta charset="utf-8">

    <title>Number Guessing Game</title>

    <style>
      html {
        font-family: sans-serif;
      }
      
      body {
        width: 60%;
        max-width: 900px;
        min-width: 580px;
        margin: 0 auto;
      }
      
      .lastResult {
        color: white;
        padding: 3px;
      }

    </style>
  </head>

  <body>
    <h1>Number Guessing Game</h1>

    <p>The system has generated a random number between 1-100.
      <br>Let's see, if you can guess it in 10 turns or less.
      <br>The system will notify you, if your guess was high or low viz. the generated number.</p>

    <div class="form">
      <label for="guessField">Take a wild-guess(1-100): </label>
      <input type="text" id="guessField" class="guessField">
      <input type="submit" value="Submit guess" class="guessSubmit">
    </div>

    <div class="resultParas">
      <p class="guesses"></p>
      <p class="lastResult"></p>
      <p class="lowOrHi"></p>
    </div>

  </body>

  <script>
    var randNum = Math.floor(Math.random() * 100) + 1; //The first variable — randNum — is assigned a random number between 1 and 100, calculated using a mathematical algorithm.

    var guesses = document.querySelector('.guesses');
    var lastResult = document.querySelector('.lastResult');
    var lowOrHi = document.querySelector('.lowOrHi');

    var guessSubmit = document.querySelector('.guessSubmit');
    var guessField = document.querySelector('.guessField');

    var guessCount = 1; //used to keep track of how many guesses the player has had
    var resetButton; //reset button doesn't exist yet

    function checkGuess() {
      var userGuess = Number(guessField.value); //Declares variable userGuess & sets its value to the current value entered inside the text field. Run this value through the built-in Number() method, just to make sure the value is definitely a number.

      if (guessCount === 1) { // Test whether the guessCount variable = 1 (i.e. whether this is the player's first attempt or not).
        guesses.textContent = 'Previous guesses: '; //make the guesses paragraph's text content equal to "Previous guesses: ".
      }

      guesses.textContent += userGuess + ' '; //Appends the current userGuess value onto the end of the guesses paragraph.

      if (userGuess === randNum) { //Checks whether the user's guess is equal to the randNum.
        lastResult.textContent = 'Congratulations! You got it right!'; //The player has guessed correctly and the game is won.
        lastResult.style.backgroundColor = 'green'; //Congratulations message with a nice green color.
        lowOrHi.textContent = ''; //Clear the contents of the Low/High guess information box.

        setGameOver(); // Yet to be implemented!
      } else if (guessCount === 10) { //checks whether this turn is the user's last turn.
        lastResult.textContent = '!!!GAME OVER!!!'; //Game over message.
        setGameOver(); // Yet to be implemented!
      } else { //the player didn't guess right, but they have more guesses left.
        lastResult.textContent = 'Wrong!';
        lastResult.style.backgroundColor = 'red';

        if (userGuess < randomNumber) { //check whether the guess was lower than the answer.
          lowOrHi.textContent = 'Last guess was low!';
        } else if (userGuess > randomNumber) { //check whether the guess was higher than the answer.
          lowOrHi.textContent = 'Last guess was high!';
        }
      }
      guessCount++; //add 1 to the guessCount variable so the player uses up their turn.
      guessField.value = ''; //empty the value out of the form text field.
      guessField.focus(); //focus it again, ready for the next guess to be entered.
    }

  </script>

</html>
